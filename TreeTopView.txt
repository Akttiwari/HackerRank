import java.util.*;
import java.io.*;

class Node {
    Node left;
    Node right;
    int data;
    
    Node(int data) {
        this.data = data;
        left = null;
        right = null;
    }
}

class Solution {


    static class QueueNode{
        Node node;
        int level;
        public QueueNode(Node node, int level){
            this.node = node;
            this.level = level;
        }
    }
 public static void topView(Node root) {

        Queue<QueueNode> queue = new LinkedList<QueueNode>();
       

        TreeMap<Integer, Integer> map = new TreeMap<Integer, Integer>();

        queue.add(new QueueNode(root, 0));
        
        while(!queue.isEmpty()){

            QueueNode r = queue.poll();

            if(!map.containsKey(r.level)){
                map.put(r.level, r.node.data);
            }
            
            if(r.node.left != null){
                queue.add(new QueueNode(r.node.left, r.level - 1));
            }
            if(r.node.right != null){
                queue.add(new QueueNode(r.node.right, r.level + 1));
            }
        }
        for (Integer value : map.values()) {
            System.out.print(value + " ");
        }
    }



	public static Node insert(Node root, int data) {